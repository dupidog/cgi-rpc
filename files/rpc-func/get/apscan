# AP scan script

json_get_var WLAN_DEVICE "device"

# Not specify WLAN_DEVICE means to scan all devices
if [ "x$WLAN_DEVICE" = "x" ]; then 
    cnt=0
    while [ "$(uci get wireless.radio$cnt)" = "wifi-device" ]; do
        WLAN_DEVICE="$WLAN_DEVICE radio$cnt"
        cnt=$(($cnt+1))
    done
fi

json_init

json_add_string "device_count" "${cnt:-1}"
json_add_array "scandata"

for device in $WLAN_DEVICE; do

    json_add_object "$device"

    # run iwinfo command
    IWINFO_RET=$(iwinfo $device scan)

    # check iwinfo return
    #if [ "${IWINFO_RET:0:4}" != "Cell" ]; then
    #    json_add_string "ret" "ERROR"
    #    json_add_string "reason" "unknown"
    #    json_dump
    #    exit 1;
    #fi

    json_add_string "device" "$device"
    json_add_array "aps"

    eval "$(echo "$IWINFO_RET" | awk '
        $1=="Cell" { if($2!="01") print "json_close_object"
            print "json_add_object \""$2"\""
            print "json_add_string \"id\" \""$2"\""
            print "json_add_string \"address\" \""$5"\""}
        $1=="ESSID:" {printf "json_add_string \"essid\" "
            for(i=2;i<=NF-1;i++) printf $i" "
            printf $NF"\n" }
        $1=="Mode:" {print "json_add_string \"mode\" \""$2"\""
            print "json_add_string \"channel\" \""$4"\""}
        $1=="Signal:" {print "json_add_string \"signal\" \""$2"\""
            split($5,str,"\/")
            print "json_add_string \"quality\" \""str[1]"\""}
        $1=="Encryption:" {printf "json_add_string \"encrypt\" \""
            for(i=2;i<=NF-1;i++) printf $i" "
            printf $NF"\"\n"}
    ')"

    json_close_object

done

json_close_array
json_dump
