# This script adds/modifies/removes the block list

RET_INFO=""

json_get_var OPS "operation"
json_get_var ID "id"
json_get_var NAME "name"
json_get_values BLOCKLIST "site"
json_get_values TIMERANGE "time"
[ "x$BLOCKLIST" = "x" ] && json_get_var BLOCKLIST "site"
[ "x$TIMERANGE" = "x" ] && json_get_var TIMERANGE "time"

BLOCKLIST="$(echo $BLOCKLIST | tr '|;' '  ' | sed -e 's/J_A1//g')"
TIMERANGE="$(echo $TIMERANGE | tr '|;' '  ' | sed -e 's/J_A1//g')"

if [ "$OPS" = "delete" -o "$OPS" = "modify" ]; then

    [ "x$ID" = "x" ] && echo "{\"ret\":\"ERROR\",\"reason\":\"invalid id\"}" && exit 2

    cnt=0
    scnt=-1
    flag=0
    while [ "x$(uci get blocklist.@policy[$cnt] 2>&1 1>/dev/null)" = "x" -a "flag" != "1" ]; do
        [ "$(uci get blocklist.@policy[$cnt].id)" = "$ID" ] && flag=1 && scnt=$cnt
        cnt=$(($cnt+1))
    done

[ "$flag" != "1" -o "$scnt" = "-1" ] && echo "{\"ret\":\"ERROR\",\"reason\":\"id not found\"}" && exit 3

fi

if [ "$OPS" = "add" ]; then

    SECTION=$(uci add blocklist policy)
    ID=$(date +%s)
    uci set blocklist.$SECTION.id="$ID"
    uci set blocklist.$SECTION.name="$NAME"
    for each in $TIMERANGE; do
        item="$(echo $each | grep '^\([0-9]\{2\}:\)\{2\}[0-9]\{2\}-\([0-9]\{2\}:\)\{2\}[0-9]\{2\}$')"
        [ "x$item" != "x" ] && uci add_list blocklist.$SECTION.time="$item"
    done
    for each in $BLOCKLIST; do
        [ "x$each" != "x" ] && uci add_list blocklist.$SECTION.site="$each"
    done

    RET_INFO="$RET_INFO,\"operation\":\"add\",\"id\":\"$ID\""

elif [ "$OPS" = "modify" ]; then

    uci set blocklist.@policy[$scnt].name="$NAME"
    uci delete blocklist.@policy[$scnt].time
    for each in $TIMERANGE; do
        item="$(echo $each | grep '^\([0-9]\{2\}:\)\{2\}[0-9]\{2\}-\([0-9]\{2\}:\)\{2\}[0-9]\{2\}$')"
        [ "x$item" != "x" ] && uci add_list blocklist.@policy[$scnt].time="$item"
    done
    uci delete blocklist.@policy[$scnt].site
    for each in $BLOCKLIST; do
        [ "x$each" != "x" ] && uci add_list blocklist.@policy[$scnt].site="$each"
    done

    RET_INFO="$RET_INFO,\"operation\":\"modify\",\"id\":\"$ID\""

elif [ "$OPS" = "delete" ]; then

    uci delete blocklist.@policy[$scnt]
    RET_INFO="$RET_INFO,\"operation\":\"delete\",\"id\":\"$ID\""

fi

uci commit blocklist
$COMMON_FUNC_PATH/syncblocklist > /dev/null 2>&1

# Echo result
[ "x$RET_INFO" != "x" ] && echo "{\"ret\":\"OK\"$RET_INFO}" || echo "{\"ret\":\"NOT_CHANGED\",\"reason\":\"no valid args\"}"
