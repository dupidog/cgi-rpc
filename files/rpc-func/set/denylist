# This script adds/removes the denied mac list

RET_INFO=""

json_get_var OPS "operation"
json_get_var MAC "mac"

MAC="$(echo $MAC | tr '[a-f]' '[A-F]' | grep '^\([1-9,A-F]\{2\}:\)\{5\}[1-9,A-F]\{2\}')"

if [ "$OPS" = "add" ]; then

    [ "x$MAC" = "x" ] && echo "{\"ret\":\"ERROR\",\"reason\":\"invalid mac address\"}" && exit 2

    cnt=0
    while [ "$(uci get wireless.@wifi-iface[$cnt])" = "wifi-iface" ]; do
        [ "$(uci get wireless.@wifi-iface[$cnt].macfilter)" != "deny" ] && \
            uci set wireless.@wifi-iface[$cnt].macfilter=deny && \
            uci del_list wireless.@wifi-iface[$cnt].maclist
        uci add_list wireless.@wifi-iface[$cnt].maclist="$MAC"
        cnt=$(($cnt+1))
    done

    RET_INFO="$RET_INFO,\"opration\":\"add_denylist\",\"mac\":\"$MAC\""

elif [ "$OPS" = "delete" ]; then

    [ "x$MAC" = "x" ] && echo "{\"ret\":\"ERROR\",\"reason\":\"invalid mac address\"}" && exit 2

    cnt=0
    while [ "$(uci get wireless.@wifi-iface[$cnt])" = "wifi-iface" ]; do
        uci del_list wireless.@wifi-iface[$cnt].maclist="$MAC"
        cnt=$(($cnt+1))
    done

    RET_INFO="$RET_INFO,\"opration\":\"delete_denylist\",\"mac\":\"$MAC\""

elif [ "$OPS" = "flush" ]; then

    cnt=0
    while [ "$(uci get wireless.@wifi-iface[$cnt])" = "wifi-iface" ]; do
        uci set wireless.@wifi-iface[$cnt].macfilter=
        uci delete wireless.@wifi-iface[$cnt].maclist
        cnt=$(($cnt+1))
    done

    RET_INFO="$RET_INFO,\"opration\":\"flush_denylist\""

fi

uci commit wireless

# Echo result
[ "x$RET_INFO" != "x" ] && echo "{\"ret\":\"OK\"$RET_INFO}" || echo "{\"ret\":\"NOT_CHANGED\",\"reason\":\"no valid args\"}"

[ "$1" = "0" -o "x$1" = "x" ] && wifi > /dev/null
