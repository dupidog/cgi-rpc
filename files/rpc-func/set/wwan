# WWAN set script

json_get_var WWAN_IP "ip"
json_get_var WWAN_MASK "netmask"
json_get_var WWAN_GW "gateway"
json_get_var WWAN_BC "broadcast"
json_get_var WWAN_DNS "dns"
json_get_var PPPOE_USER "username"
json_get_var PPPOE_PASS "password"
json_get_var PPPOE_AC "ac"
json_get_var PPPOE_SERVICE "service"
json_get_var PROTOCOL "protocol"

WWAN_IP=$(echo $WWAN_IP | grep "^[0-9]\{1,3\}\.\([0-9]\{1,3\}\.\)\{2\}[0-9]\{1,3\}$")
WWAN_MASK=$(echo $WWAN_MASK | grep "^[0-9]\{1,3\}\.\([0-9]\{1,3\}\.\)\{2\}[0-9]\{1,3\}$")
WWAN_GW=$(echo $WWAN_GW | grep "^[0-9]\{1,3\}\.\([0-9]\{1,3\}\.\)\{2\}[0-9]\{1,3\}$")
WWAN_BC=$(echo $WWAN_BC | grep "^[0-9]\{1,3\}\.\([0-9]\{1,3\}\.\)\{2\}[0-9]\{1,3\}$")

if [ "$WWAN_DNS" = "JSON_ARRAY" -o "$WWAN_DNS" = "J_A1" ]; then json_get_values WWAN_DNS "dns"; fi

RET_INFO=""

if [ "$PROTOCOL" = "dhcp" ]; then
# WWAN: DHCP

    uci set network.wwan.proto="dhcp"
    uci delete network.wwan._orig_ifname
    uci delete network.wwan._orig_bridge
    uci delete network.wwan.ipaddr
    uci delete network.wwan.netmask
    uci delete network.wwan.gateway
    uci delete network.wwan.broadcast
    uci delete network.wwan.dns
    uci delete network.wwan.username
    uci delete network.wwan.password
    uci delete network.wwan.ac
    uci delete network.wwan.service
    RET_INFO="$RET_INFO,\"protocol\":\"dhcp\""

elif [ "$PROTOCOL" = "static" ]; then
# WWAN: Static IP

    if [ "x$WWAN_IP" != "x" -a "x$WWAN_MASK" != "x" ]; then
        uci delete network.wwan._orig_ifname
        uci delete network.wwan._orig_bridge
        uci delete network.wwan.username
        uci delete network.wwan.password
        uci delete network.wwan.ac
        uci delete network.wwan.service
        uci set network.wwan.proto="static"
        uci set network.wwan.ipaddr="$WWAN_IP"
        uci set network.wwan.netmask="$WWAN_MASK"
        if [ "x$WWAN_GW" != "x" ]; then
            uci set network.wwan.gateway="$WWAN_GW"
        else
            uci delete network.wwan.gateway
        fi
        if [ "x$WWAN_BC" != "x" ]; then
            uci set network.wwan.broadcast="$WWAN_BC"
        else
            uci delete network.wwan.broadcast
        fi
        if [ "x$WWAN_DNS" != "x" ]; then
            uci set network.wwan.dns="$WWAN_DNS"
        else
            uci delete network.wwan.dns
        fi
        RET_INFO="$RET_INFO,\"protocol\":\"static\""
    else
        echo "{\"ret\":\"NOT_CHANGED\",\"reason\":\"wwan ip or mask missing\"}"
        exit 2;
    fi

elif [ "$PROTOCOL" = "pppoe" ]; then
# WWAN: PPPOE

    if [ "x$PPPOE_USER" != "x" -a "x$PPPOE_PASS" != "x" ]; then
        uci delete network.wwan._orig_ifname
        uci delete network.wwan._orig_bridge
        uci delete network.wwan.ipaddr
        uci delete network.wwan.netmask
        uci delete network.wwan.gateway
        uci delete network.wwan.broadcast
        uci delete network.wwan.dns
        uci set network.wwan.proto="pppoe"
        uci set network.wwan.username="$PPPOE_USER"
        uci set network.wwan.password="$PPPOE_PASS"
        if [ "x$PPPOE_AC" != "x" ]; then
            uci set network.wwan.ac="$PPPOE_AC"
        else
            uci delete network.wwan.ac
        fi
        if [ "x$PPPOE_SERVICE" != "x" ]; then
            uci set network.wwan.service="$PPPOE_SERVICE"
        else
            uci delete network.wwan.broadcast
        fi
        RET_INFO="$RET_INFO,\"protocol\":\"pppoe\""
    else
        echo "{\"ret\":\"NOT_CHANGED\",\"reason\":\"pppoe user or pass missing\"}"
        exit 2;
    fi

else

    echo "{\"ret\":\"NOT_CHANGED\",\"reason\":\"protocol err\"}"
    exit 1;

fi

uci commit network

if [ "x$RET_INFO" != "x" ]; then
    echo "{\"ret\":\"OK\"$RET_INFO}"
else
    echo "{\"ret\":\"NOT_CHANGED\",\"reason\":\"no valid args\"}"
fi

[ "$1" = "0" -o "x$1" = "x" ] && . $RPC_FUNC_PATH/sys/network > /dev/null
