=====LOGIN====

1.Login		{"auth":PASSWORD}
		// PASSWORD is set previously in config file as auth_key

=====QRERY=====

1.SYS status    {"method":"get","target":"sys"}

2.WAN status    {"method":"get","target":"wan"}

3.LAN status    {"method":"get","target":"lan"}

4.WLAN status	{"method":"get","target":"wlan"}

5.Firewall	{"method":"get","target":"firewall"}

6.Samba		{"method":"get","target":"samba"}

7.QoS		{"method":"get","target":"qos"}

8.AP scan	{"method":"get","target":"apscan","device":DEVICE}
			// default device value is "wlan0"

9.WWAN status	{"method":"get","target":"wwan"}

10.DLNA status	{"method":"get","target":"dlna"}

11.DHCP status	{"method":"get","target":"dhcp"}

12.Act clients	{"method":"get","target":"clientlist"}

13.Deny list	{"method":"get","target":"denylist"}

======SET======

1.WAN		{"method":"set","target":"wan","protocol":"static"","ip":IP,
			"netmask":NETMASK,"gateway":GATEWAY,
			"broadcast":BROADCAST,"dns":[DNS1,...]}
			// gateway, broadcast, dns are optional
		{"method":"set","target":"wan","protocol":"dhcp"}
		{"method":"set","target":"wan","protocol":"pppoe","username":USERNAME,
			"password":PASSWORD,"ac":AC,"service",SERVICE}
			// ac, service are optional

2.WLAN		{"method":"set","target":"wlan","device":DEVICE,"enabled":"0|1"}
			// default device value is "radio0"
		{"method":"set","target":"wlan","device":DEVICE,"channel":CHANNEL}
			// default device value is "radio0"
		{"method":"set","target":"wlan","device":DEVICE,"ssid":SSID,"bssid":BSSID}
			// default device value is "radio0"; bssid needs to be specified when
			// device working in ap client mode
		{"method":"set","target":"wlan","device":DEVICE,"encryption":"none|wep-open|
			wep-shared|psk|psk2|psk-mixed","key":KEY|[KEY-NO,KEY1,KEY2,KEY3,KEY4]}
			// default device value is "radio0"; if psk|psk2|psk-mixed used, key 
			// should be simply KEY; if wep-open|wep-shared used, key should be 
			// in format [KEY-NO,KEY1,KEY2,KEY3,KEY4], specify KEY will be traslated 
			// to [1,KEY,,,]; if none encryption, key will be ignored

3.LAN		{"method":"set","target":"lan","ip":IP,"netmask":NETMASK}

4.DHCP		{"method":"set","target":"dhcp","enabled":"0|1"}
		{"method":"set","target":"dhcp","start":START_IP,"limit":LIMIT_IP,
			"leasetime":NUM_IN_HOURS}

5.Firewall	{"method":"set","target":"firewall","function":"general",
			"syn_flood":"0|1","drop_invalid":"0|1"}
			// ommit syn_flood/drop_invalid means not change
		{"method":"set","target":"firewall","function":"zone",
			"zone":"default|lan|wan","input":"ACCEPT|REJECT|DROP",
			"output":"ACCEPT|REJECT|DROP","forward":"ACCEPT|REJECT|DROP"}
			// ommit input/output/forward means not change
		{"method":"set","target":"firewall","function":"redirect",
			"operation":"add|delete|enable|disable","name":NAME,"dport":DPORT,
			"dest_ip":DEST_IP,"dest_port":DEST_PORT,"proto":"tcp udp|tcp|udp|none"}
			// if operation=delete/enable/disable, only name is needed in subsequent 
			// parameter; ommit dest_port means the same as dport, ommit proto means 
			// "tcp udp"
		{"method":"set","target":"firewall","function":"rule",
			"operation":"add|delete|enable|disable","name":NAME,
			"dest_port":DEST_PORT,"proto":"tcp udp|tcp|udp|none"}
			// if operation=delete/enable/disable, only name is needed in subsequent 
			// parameter; ommit proto means "tcp udp"

6.Samba		{"method":"set","target":"samba","hostname":HOSTNAME,"workgroup":WORKGROUP,
			"description":DESCRIPTION,"sharehome":"0|1"}
			// ommit section means no change
		{"method":"set","target":"samba","needpassword":"0|1","password":PASSWORD,
			"readonly":"0|1"}
			// these sections set global password and readonly settings
		{"method":"set","target":"samba","sambashare":"add|delete","name":NAME,
			"path":PATH,"users":USERS,"guestok":"yes|no","sharereadonly":"yes|no",
			"createmask":FMASK,"dirmask":DMASK
			// name section must be specified when deleting a sambashare, other
			// sections will be ignored; when adding a sambashare, ommit sections
			// will use their defalut value

7.QoS		{"method":"set","target":"qos","enabled":"0|1","upload":UPLOAD,"download":DOWNLOAD,
			"overhead":"0|1",halfduplex:"0|1"}
			// ommit section means no change, ommit upload/download or set to "0" means
			// unlimited
		{"method":"set","target":"qos","qosrule":"add","class":"Priority|Express|Normal|Bulk",
			"ports":PORTS,"srchost":SRCHOST,"dsthost":DSTHOST,"service":SERVICE,
			"proto":"TCP|UDP|ICMP","connbytes":CONNBYTES,"comment":COMMENT}
			// multi ports can be "23,80,2000-2100", multi srchost/dsthost can be
			// "192.168.1.100,192.168.1.200-192.168.210", ommit section means for all
		{"method":"set","target":"qos","qosrule":"delete","id":ID}

8.AP mode	{"method":"set","target":"apmode","device":DEVICE,"mode":"ap|sta"}
			// ommit device means "radio0", ap mode means "Access Point" or "Master" mode,
			// sta mode means "Station" or "Client" mode. After switching mode, a previos
			// backup setting will be used.

9.WWAN		{"method":"set","target":"wwan","protocol":"static"","ip":IP,
			"netmask":NETMASK,"gateway":GATEWAY,
			"broadcast":BROADCAST,"dns":[DNS1,...]}
			// gateway, broadcast, dns are optional
		{"method":"set","target":"wwan","protocol":"dhcp"}
		{"method":"set","target":"wwan","protocol":"pppoe","username":USERNAME,
			"password":PASSWORD,"ac":AC,"service",SERVICE}
			// ac, service are optional

10.DLNA		{"method":"set","target":"dlna","enabled":"0|1","port":PORT,"name":FRIENDLY_NAME,
			"mediadir":[{"type":"all|audio|image|video","dir":MEDIA_DIR_PATH}, ... ]}
			// ommit section means no change.

11.Deny list	{"method":"set","target":"denylist","operation":"add|delete|flush","mac":MAC}
			// use this command will overwrite system wifi allow/deny lists!

======SYS======

1.Reboot router {"method":"sys","target":"reboot"}

2.Restart wifi  {"method":"sys","target":"wifi"}

3.Restart net   {"method":"sys","target":"network"}

4.Rest router   {"method":"sys","target":"reset"}

